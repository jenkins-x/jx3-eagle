ingress:
  enabled: true
  hosts:
    - grafana{{ .Values.jxRequirements.ingress.namespaceSubDomain }}{{ .Values.jxRequirements.ingress.domain }}

serviceAccount:
  annotations:
    iam.gke.io/gcp-service-account: {{ .Values.jxRequirements.cluster.clusterName }}-grafana@{{ .Values.jxRequirements.cluster.project }}.iam.gserviceaccount.com


extraContainers: |
  - name: cloudsql-proxy
    image: gcr.io/cloudsql-docker/gce-proxy:1.17
    command:
      - "/cloud_sql_proxy"
      - "-instances=jx-labs-infra:europe-west2:jx-activity=tcp:5432"

persistence:
  enabled: true

grafana.ini:
  server:
    domain: grafana{{ .Values.jxRequirements.ingress.namespaceSubDomain }}{{ .Values.jxRequirements.ingress.domain }}
    root_url: "http://grafana{{ .Values.jxRequirements.ingress.namespaceSubDomain }}{{ .Values.jxRequirements.ingress.domain }}"
    serve_from_sub_path: true

deploymentStrategy: { "type": "Recreate" }
testFramework.enabled: false

envFromSecret: grafana-jx

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: jx
      type: postgres
      url: localhost:5432
      database: dev
      user: read
      secureJsonData:
        password: ${DB}
      jsonData:
        sslmode: "disable" # disable/require/verify-ca/verify-full
        maxOpenConns: 0         # Grafana v5.4+
        maxIdleConns: 2         # Grafana v5.4+
        connMaxLifetime: 14400  # Grafana v5.4+
        postgresVersion: 903 # 903=9.3, 904=9.4, 905=9.5, 906=9.6, 1000=10
        timescaledb: false
    - name: GitHub
      accessToken: ${GITHUB}

plugins:
- grafana-github-datasource